name: README Dynamic Create

on:
  push:
    paths:
      - README
      - tables/*.md
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update_templates:
    name: "Update README"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Create new branch
        run: |
          git checkout -b auto-update

      - name: Generate README.md
        run: |
          python replace_tag.py
          git status  # Debug: verifica alterações
          git diff    # Debug: mostra diferenças

      - name: Commit changes
        run: |
          sudo chmod -R ugo+rwX .
          git config --global user.email "github_actions@email.com"
          git config --global user.name "github_actions"
          git add .
          git commit -m "README Create Automation" || echo "Sem alterações para commit"

      - name: Push changes to new branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: auto-update

      - name: Create Pull Request
        id: pr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: auto-update
          destination_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug PR Outputs
        run: |
          echo "PR URL: ${{ steps.pr.outputs.pr_url }}"
          echo "PR Created: ${{ steps.pr.outputs.pr_created }}"

      - name: Get PR Number
        id: extract-pr-number
        run: |
          PR_URL="${{ steps.pr.outputs.pr_url }}"
          [[ $PR_URL =~ /pull/([0-9]+) ]] && echo "PR_NUMBER=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
        if: success()

      - name: Show PR Number
        run: |
          echo "PR Number: ${{ steps.extract-pr-number.outputs.PR_NUMBER }}"

      - name: Auto-Merge PR
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.extract-pr-number.outputs.PR_NUMBER }},
              merge_method: 'squash'
            })

      - name: Delete Branch
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: auto-update
        run: |
          gh api -X DELETE "repos/${{ github.repository }}/git/refs/heads/$BRANCH_NAME"
